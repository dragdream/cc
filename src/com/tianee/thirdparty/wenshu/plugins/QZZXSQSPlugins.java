package com.tianee.thirdparty.wenshu.plugins;

import java.util.Map;

import com.jacob.req.JacobRequest;
import com.jacob.req.JacobResponse;
import com.tianee.webframe.util.str.TeeUtility;

public class QZZXSQSPlugins extends TeeWenShuPlugin{

	@Override
	public String process(JacobRequest jacobRequest, String wordId,
			Map<String, String> data) {
	/*	String base64="";
		data.put("文号文","xx文");
		data.put("文号字","xx");
		data.put("文号","123");
		data.put("人民法院名称","xxxx人民法院");
		data.put("处罚决定","决定xxxxxxxxx");
		data.put("送达日期","2018-10-15");
		data.put("负责人",base64);
		data.put("行政机关落款","xxxxxxx");
		data.put("落款日期","2018-10-15");
		data.put("履行催告文号","123231312");
		data.put("强制执行事项","强制执行事项");
		data.put("页眉","编号：21424324324234");*/
		
		
		//清除图片签章
		String fzr = data.get("负责人");
		data.remove("负责人");
		
		String fzr2 = data.get("负责人2");
		data.remove("负责人2");
		
		
		//套入书签
		JacobResponse jacobResponse = jacobRequest.replaceBookmarks(wordId, data);
		String newWordId = jacobResponse.fileId;//获取替换书签后的word文件id
		
		//判断签名是否存在
		String scriptRun ="";
		if(!TeeUtility.isNullorEmpty(fzr)){
			scriptRun += "jacob.setBookMarksPicture(\"负责人\",\""+fzr+"\",7,-1,25);";
		}
		
		
		if(!TeeUtility.isNullorEmpty(fzr2)){
			scriptRun += "jacob.setBookMarksPicture(\"负责人2\",\""+fzr2+"\",7,-1,25);";
		}
		
	 jacobResponse = jacobRequest.scriptRun(scriptRun, newWordId);
	  newWordId = jacobResponse.fileId;
		
		return newWordId;
	}

}
